<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>container on Hugo Book</title>
    <link>http://localhost:1313/fyne/docs/api/container/</link>
    <description>Recent content in container on Hugo Book</description>
    <generator>Hugo -- gohugo.io</generator><atom:link href="http://localhost:1313/fyne/docs/api/container/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>container</title>
      <link>http://localhost:1313/fyne/docs/api/container/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/</guid>
      <description>container# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Package container provides container widgets that are used to lay out and organise applications
Usage#const ( 	// ScrollBoth supports horizontal and vertical scrolling. 	ScrollBoth ScrollDirection = widget.ScrollBoth 	// ScrollHorizontalOnly specifies the scrolling should only happen left to right. 	ScrollHorizontalOnly = widget.ScrollHorizontalOnly 	// ScrollVerticalOnly specifies the scrolling should only happen top to bottom. 	ScrollVerticalOnly = widget.ScrollVerticalOnly 	// ScrollNone turns off scrolling for this container.</description>
    </item>
    
    <item>
      <title>container.AppTabs</title>
      <link>http://localhost:1313/fyne/docs/api/container/apptabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/apptabs/</guid>
      <description>container.AppTabs# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Usage#type AppTabs#type AppTabs struct { 	widget.BaseWidget  	Items []*TabItem  	// Deprecated: Use `OnSelected func(*TabItem)` instead. 	OnChanged func(*TabItem) 	OnSelected func(*TabItem) 	OnUnselected func(*TabItem) } AppTabs container is used to split your application into various different areas identified by tabs. The tabs contain text and/or an icon and allow the user to switch between the content specified in each TabItem.</description>
    </item>
    
    <item>
      <title>container.DocTabs</title>
      <link>http://localhost:1313/fyne/docs/api/container/doctabs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/doctabs/</guid>
      <description>container.DocTabs# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Usage#type DocTabs#type DocTabs struct { 	widget.BaseWidget  	Items []*TabItem  	CreateTab func() *TabItem 	CloseIntercept func(*TabItem) 	OnClosed func(*TabItem) 	OnSelected func(*TabItem) 	OnUnselected func(*TabItem) } DocTabs container is used to display various pieces of content identified by tabs. The tabs contain text and/or an icon and allow the user to switch between the content specified in each TabItem.</description>
    </item>
    
    <item>
      <title>container.Scroll</title>
      <link>http://localhost:1313/fyne/docs/api/container/scroll/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/scroll/</guid>
      <description>container.Scroll# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Usage#type Scroll#type Scroll = widget.Scroll Scroll defines a container that is smaller than the Content. The Offset is used to determine the position of the child widgets within the container.
Since: 1.4func NewHScroll#func NewHScroll(content fyne.CanvasObject) *Scroll NewHScroll create a scrollable parent wrapping the specified content. Note that this may cause the MinSize.Width to be smaller than that of the passed object.</description>
    </item>
    
    <item>
      <title>container.ScrollDirection</title>
      <link>http://localhost:1313/fyne/docs/api/container/scrolldirection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/scrolldirection/</guid>
      <description>container.ScrollDirection# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Usage#type ScrollDirection#type ScrollDirection = widget.ScrollDirection ScrollDirection represents the directions in which a Scroll container can scroll its child content.
Since: 1.4</description>
    </item>
    
    <item>
      <title>container.Split</title>
      <link>http://localhost:1313/fyne/docs/api/container/split/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/split/</guid>
      <description>container.Split# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Usage#type Split#type Split struct { 	widget.BaseWidget 	Offset float64 	Horizontal bool 	Leading fyne.CanvasObject 	Trailing fyne.CanvasObject } Split defines a container whose size is split between two children.
Since: 1.4func NewHSplit#func NewHSplit(leading, trailing fyne.CanvasObject) *Split NewHSplit creates a horizontally arranged container with the specified leading and trailing elements. A vertical split bar that can be dragged will be added between the elements.</description>
    </item>
    
    <item>
      <title>container.TabItem</title>
      <link>http://localhost:1313/fyne/docs/api/container/tabitem/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/tabitem/</guid>
      <description>container.TabItem# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Usage#type TabItem#type TabItem struct { 	Text string 	Icon fyne.Resource 	Content fyne.CanvasObject } TabItem represents a single view in a tab view. The Text and Icon are used for the tab button and the Content is shown when the corresponding tab is active.
Since: 1.4func NewTabItem#func NewTabItem(text string, content fyne.CanvasObject) *TabItem NewTabItem creates a new item for a tabbed widget - each item specifies the content and a label for its tab.</description>
    </item>
    
    <item>
      <title>container.TabLocation</title>
      <link>http://localhost:1313/fyne/docs/api/container/tablocation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/fyne/docs/api/container/tablocation/</guid>
      <description>container.TabLocation# import &amp;#34;fyne.io/fyne/v2/container&amp;#34; Usage#type TabLocation#type TabLocation int TabLocation is the location where the tabs of a tab container should be rendered
Since: 1.4const ( 	TabLocationTop TabLocation = iota 	TabLocationLeading 	TabLocationBottom 	TabLocationTrailing ) TabLocation values</description>
    </item>
    
  </channel>
</rss>
